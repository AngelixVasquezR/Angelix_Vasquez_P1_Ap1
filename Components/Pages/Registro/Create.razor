@page "/Aporte/Create"

@inject AportesService AportesService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Crear Aporte</PageTitle>

<EditForm Model="Aporte" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <h3><i class="fas fa-clipboard-list"></i> Registro de Aportes</h3>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }

    <div class="card-body">
        @*Id*@
        <div class="mb-3">
            <label for="Monto" class="form-label">Id:</label>
            <InputNumber id="Monto" @bind-Value="Aporte.AporteId" class="form-control" /> 
            
        </div>
        @*Fecha*@
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="fechaIngreso" class="form-label">Fecha:</label>
                <InputDate @bind-Value="Aporte.Fecha" class="form-control" />
            </div>
        </div>
        @* Nombres *@
        <div class="mb-3">
            <label for="Persona" class="form-label">Persona:</label>
            <InputText id="Nombres" @bind-Value="Aporte.Persona" class="form-control" />
            <ValidationMessage For="@(() => Aporte.Persona)" />
        </div>
        @* Observacion *@
        <div class="mb-3">
            <label for="Observacion" class="form-label">Observacion:</label>
            <InputText id="Nombres" @bind-Value="Aporte.Observacion" class="form-control" />
            <ValidationMessage For="@(() => Aporte.Observacion)" />
        </div>
        @* Monto *@
        <div class="mb-3">
            <label for="Monto" class="form-label">Monto:</label>
            <InputNumber id="Monto" @bind-Value="Aporte.Monto" class="form-control" />
            <ValidationMessage For="@(() => Aporte.Monto)" />
        </div>
    </div>

    <div class="card-footer bg-light d-flex justify-content-center mt-3">
        <div class="btn-group">
            <button type="button" class="btn btn-outline-primary ml-2" @onclick="Nuevo"><span class="bi bi-plus"></span> Nuevo </button>
            <button type="submit" class="btn btn-outline-success ml-2"><span class="bi bi-check-circle-fill"></span> Guardar </button>
            <a href="/Aporte/Index" class="btn btn-outline-danger ml-2"><span class="bi bi-arrow-bar-left"></span> Retroceder </a>
        </div>
    </div>
</EditForm>





@code
{
    public Aportes Aporte { get; set; } = new Aportes();
    private string? errorMessage;

    public void Nuevo()
    {
        Aporte = new Aportes();
        errorMessage = null;
    }

    public async Task Guardar()
    {
        try
        {
            bool guardo = await AportesService.Guardar(Aporte);
            if (guardo)
            {
                Nuevo();
                NavigationManager.NavigateTo("/Aporte/Index");
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al guardar el registro: {ex.Message}";
        }
    }

}